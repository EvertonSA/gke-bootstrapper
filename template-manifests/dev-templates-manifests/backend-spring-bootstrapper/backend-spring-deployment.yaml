---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-spring
  namespace: dev
  labels:
    app: backend-spring
spec:
  minReadySeconds: 5
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: backend-spring
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: backend-spring
    spec:
      containers:
      - name: springboot-example
        image: evearakaki/springboot-example:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          value: test
        - name: JAVA_OPTIONS
          value: "-Xmx -XX:128m"
#see https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot-actuator
#see https://github.com/IBM-Bluemix-Docs/java-spring/blob/master/healthcheck.md
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 180
          timeoutSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 10
          failureThreshold: 10
# see https://medium.com/faun/java-application-optimization-on-kubernetes-on-the-example-of-a-spring-boot-microservice-cf3737a2219c
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 64Mi
