apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-react
  namespace: dev
  labels:
    app: frontend-react
spec:
  minReadySeconds: 5
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: frontend-react
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: frontend-react
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: react-env-configmap
      containers:
      - name: sciensa-react-example
        image: evearakaki/reactjs-example:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: APP_COLOR
          valueFrom:
            configMapKeyRef:
              name: react-env-configmap
              key: app_color
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: react-env-configmap
              key: version
# livenessProbe not necessary
# readinessProbe not necessary
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 64Mi

# bellow uses volumes instead of env variables, but the application uses env, so its useles
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: frontend-react
#   namespace: prd
#   labels:
#     app: frontend-react
# spec:
#   minReadySeconds: 5
#   revisionHistoryLimit: 5
#   progressDeadlineSeconds: 60
#   strategy:
#     rollingUpdate:
#       maxUnavailable: 0
#     type: RollingUpdate
#   selector:
#     matchLabels:
#       app: frontend-react
#   template:
#     metadata:
#       annotations:
#         prometheus.io/scrape: "true"
#       labels:
#         app: frontend-react
#     spec:
#       volumes:
#       - name: config-volume
#         configMap:
#           name: react-env-configmap
#       containers:
#       - name: sciensa-react-example
#         image: evearakaki/reactjs-example:0.0.1
#         imagePullPolicy: IfNotPresent
#         ports:
#         - containerPort: 8080
#           name: http
#           protocol: TCP
#         volumeMounts:
#         - name: config-volume
#           mountPath: /etc/config
#         livenessProbe:
#           exec:
#             command:
#             - podcli
#             - check
#             - http
#             - localhost:9898/healthz
#           initialDelaySeconds: 5
#           timeoutSeconds: 5
#         readinessProbe:
#           exec:
#             command:
#             - podcli
#             - check
#             - http
#             - localhost:9898/readyz
#           initialDelaySeconds: 5
#           timeoutSeconds: 5
#         resources:
#           limits:
#             cpu: 2000m
#             memory: 512Mi
#           requests:
#             cpu: 100m
#             memory: 64Mi
